#
## viadee Unternehmensberatung AG
#

# Default values for vpw-frontend of the viadee Process Warehouse.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: "public.ecr.aws/viadee/vpw-frontend"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "vpw-frontend"

# Specify labels
labels: {}

selectorLabels:
  # Name of whole application: viadee Process Warehouse (vpw)
  app: vpw
  # Frontend as part of the viadee Process Warehouse (vpw)
  component: frontend
  # Release name of deployment
  release: showcase

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Volumes
volumes:
  basicAuthVolume:
    name: auth-secret-volume
    secretName: vpw-frontend-basic-auth-secret
    mountPath: /etc/basic_auth
    htpasswd: demo:$2y$10$wFBQn.MYjgTRWKImDl8s/Ov44E1yf0Eg4Igcvu//CBGu1Onf82WCO # Set a htpasswd to access frontend application, here demo:demo

# Frontend (nginx) containers' liveness probe.
livenessProbe:
  httpGet:
    path: "/health"
    port: http
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 3
  failureThreshold: 5

# Frontend (nginx) containers' readiness probe.
readinessProbe:
  httpGet:
    path: "/health"
    port: http
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 3
  failureThreshold: 5

# Service parameters
service:
  type: ClusterIP   # Kubernetes Service type
  port: 8080        # Exposed port
  targetPort: 8080  # Exposed port of container (frontend application)

# Ingress parameters
ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: example.com
      paths:
        - path:
          pathType: ImplementationSpecific
  tls:
    - secretName: tls-example-cloud
      hosts:
        - example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: component
              operator: In
              values:
                - vpw-frontend
        topologyKey: kubernetes.io/hostname